name: Release

on:
  push:
    tags:
      - 'v*.*.*'
      - '*.*.*'
      - '*.*.*-rc'
      - '*.*.*-RC'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies for cross-compilation
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgtk-3-dev libglib2.0-dev libgdk-pixbuf2.0-dev cargo mingw-w64

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          override-file: Cargo.toml

      - name: Add required Rust targets
        run: |
          rustup target add x86_64-pc-windows-gnu
          rustup target add x86_64-unknown-linux-gnu
          rustup target add x86_64-unknown-linux-musl
          rustup target add x86_64-apple-darwin

      - name: Build for native release
        run: cargo build --release

      - name: Build and collect binaries for all platforms
        run: |
          set -e
          mkdir -p artifacts

          # Windows
          cargo build --release --target=x86_64-pc-windows-gnu
          if [ -f target/x86_64-pc-windows-gnu/release/image-view.exe ]; then
            cp target/x86_64-pc-windows-gnu/release/image-view.exe artifacts/image-view-windows.exe
          else
            echo "Windows binary not found!" && exit 1
          fi

          # Linux GNU
          cargo build --release --target=x86_64-unknown-linux-gnu
          if [ -f target/x86_64-unknown-linux-gnu/release/image-view ]; then
            cp target/x86_64-unknown-linux-gnu/release/image-view artifacts/image-view-linux
            cp target/x86_64-unknown-linux-gnu/release/image-view artifacts/image-view-deb
            cp target/x86_64-unknown-linux-gnu/release/image-view artifacts/image-view-pacman
            cp target/x86_64-unknown-linux-gnu/release/image-view artifacts/image-view-yum
            cp target/x86_64-unknown-linux-gnu/release/image-view artifacts/image-view-redhat
          else
            echo "Linux GNU binary not found!" && exit 1
          fi

          # Linux MUSL
          cargo build --release --target=x86_64-unknown-linux-musl
          if [ -f target/x86_64-unknown-linux-musl/release/image-view ]; then
            cp target/x86_64-unknown-linux-musl/release/image-view artifacts/image-view-musl
          else
            echo "Linux MUSL binary not found!" && exit 1
          fi

          # macOS
          cargo build --release --target=x86_64-apple-darwin
          if [ -f target/x86_64-apple-darwin/release/image-view ]; then
            cp target/x86_64-apple-darwin/release/image-view artifacts/image-view-mac
          else
            echo "macOS binary not found!" && exit 1
          fi

          ls -al artifacts

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: image-view-binaries
          path: artifacts/*